/*
* Load Datasets
*/

// Geomtery in Main App
// Analysis in functions

var countries = ee.FeatureCollection("FAO/GAUL/2015/level0");
var worldRegions = ee.FeatureCollection("FAO/GAUL/2015/level1");
var worldSubRegions = ee.FeatureCollection("FAO/GAUL/2015/level2");

//Testing
var country = 'Ghana';
var startYear = '2009';
var targetYear = '2019';

var countryGeometry = countries.filter(ee.Filter.eq('ADM0_NAME', country));
var regions = worldRegions.filter(ee.Filter.eq('ADM0_NAME', country));
var subRegions = worldSubRegions.filter(ee.Filter.eq('ADM0_NAME', country));

/* 
 *   Functions
 */
var LDNIndicatorFunctions = require('users/ee-simon-ent/geo-ldn-app:LDNIndicatorFunctions');
var HelperFunctions = require('users/ee-simon-ent/geo-ldn-app:HelperFunctions');
var AnalysisLayers = require('users/ee-simon-ent/geo-ldn-app:AnalysisLayers');

var outputImages = LDNIndicatorFunctions.LDNIndicatorImages(startYear, targetYear, subRegions)
// var outputImages = LDNIndicatorFunctions.LDNIndicatorData(startYear, targetYear, subRegions)

var landCoverChange = outputImages[0].clip(countryGeometry);

var landCover = HelperFunctions.RegionsOverlay(landCoverChange, regions, subRegions);
Map.addLayer(landCover,{min: -1, max: 2, palette: ['fc8d59', '#ffffbf', '1a9850', '808080']}, 'Land Cover', false, 0.75);

var regionalLandCoverChange = outputImages[2].clip(countryGeometry);
// Map.addLayer(regionalLandCoverChange,{min: -1, max: 2, palette: ['fc8d59', 'ffffbf', '1a9850', '808080']}, 'Regional Degredation', true, 0.9)
// Map.addLayer(regionalLandCoverChange,{min: -1, max: 1, palette: ['808080', 'fc8d59', 'ffffbf', '1a9850', '808080']}, 'Regional Degredation', true, 0.9)
// Thoughts on -1 to 1 vs -0.2 to 0.2, the latter makes all changes much more easily identified?
Map.addLayer(regionalLandCoverChange,{min: -0.20, max: 0.20, palette: ['fc8d59', 'ffffbf', '1a9850']}, 'Regional Degredation', true, 0.9)

var soilOrganicCarbonChange = outputImages[1].clip(countryGeometry);
var soilOrganicCarbon = HelperFunctions.RegionsOverlay(soilOrganicCarbonChange, regions, subRegions);
Map.addLayer(soilOrganicCarbon,{min: -1, max: 3, palette: ['fc8d59', '#ffffbf', '1a9850', '808080']}, 'Soil Organic Carbon', false, 0.75);
Map.addLayer(soilOrganicCarbonChange,{min: -1, max: 3, palette: ['fc8d59', '#ffffbf', '1a9850']}, 'Soil Organic Carbon Change', false, 0.75);

var fireFrequency = AnalysisLayers.FireFrequencyAnalysis(startYear, targetYear).clip(countryGeometry)
Map.addLayer(fireFrequency, {min: 0, max: 1, palette: ['#ffeda0', '#de2d26']}, 'Fire Frequency', false, 0.5);

Map.addLayer(HelperFunctions.RegionsOverlay(ee.Image().byte(), regions, subRegions), {palette:['808080']}, 'Regions', true, 0.85);

Map.centerObject(countryGeometry);